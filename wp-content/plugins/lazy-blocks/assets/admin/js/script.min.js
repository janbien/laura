!function(e){var t={};function n(a){if(t[a])return t[a].exports;var l=t[a]={i:a,l:!1,exports:{}};return e[a].call(l.exports,l,l.exports,n),l.l=!0,l.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var l in e)n.d(a,l,function(t){return e[t]}.bind(null,l));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){!function(t,n,a){e.exports=a(),e.exports.default=a()}(0,0,function(){var e=JSON.parse('{"$":"dollar","%":"percent","&":"and","<":"less",">":"greater","|":"or","¢":"cent","£":"pound","¤":"currency","¥":"yen","©":"(c)","ª":"a","®":"(r)","º":"o","À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","Æ":"AE","Ç":"C","È":"E","É":"E","Ê":"E","Ë":"E","Ì":"I","Í":"I","Î":"I","Ï":"I","Ð":"D","Ñ":"N","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","Ù":"U","Ú":"U","Û":"U","Ü":"U","Ý":"Y","Þ":"TH","ß":"ss","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","æ":"ae","ç":"c","è":"e","é":"e","ê":"e","ë":"e","ì":"i","í":"i","î":"i","ï":"i","ð":"d","ñ":"n","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","ù":"u","ú":"u","û":"u","ü":"u","ý":"y","þ":"th","ÿ":"y","Ā":"A","ā":"a","Ă":"A","ă":"a","Ą":"A","ą":"a","Ć":"C","ć":"c","Č":"C","č":"c","Ď":"D","ď":"d","Đ":"DJ","đ":"dj","Ē":"E","ē":"e","Ė":"E","ė":"e","Ę":"e","ę":"e","Ě":"E","ě":"e","Ğ":"G","ğ":"g","Ģ":"G","ģ":"g","Ĩ":"I","ĩ":"i","Ī":"i","ī":"i","Į":"I","į":"i","İ":"I","ı":"i","Ķ":"k","ķ":"k","Ļ":"L","ļ":"l","Ľ":"L","ľ":"l","Ł":"L","ł":"l","Ń":"N","ń":"n","Ņ":"N","ņ":"n","Ň":"N","ň":"n","Ő":"O","ő":"o","Œ":"OE","œ":"oe","Ŕ":"R","ŕ":"r","Ř":"R","ř":"r","Ś":"S","ś":"s","Ş":"S","ş":"s","Š":"S","š":"s","Ţ":"T","ţ":"t","Ť":"T","ť":"t","Ũ":"U","ũ":"u","Ū":"u","ū":"u","Ů":"U","ů":"u","Ű":"U","ű":"u","Ų":"U","ų":"u","Ź":"Z","ź":"z","Ż":"Z","ż":"z","Ž":"Z","ž":"z","ƒ":"f","Ơ":"O","ơ":"o","Ư":"U","ư":"u","ǈ":"LJ","ǉ":"lj","ǋ":"NJ","ǌ":"nj","Ș":"S","ș":"s","Ț":"T","ț":"t","˚":"o","Ά":"A","Έ":"E","Ή":"H","Ί":"I","Ό":"O","Ύ":"Y","Ώ":"W","ΐ":"i","Α":"A","Β":"B","Γ":"G","Δ":"D","Ε":"E","Ζ":"Z","Η":"H","Θ":"8","Ι":"I","Κ":"K","Λ":"L","Μ":"M","Ν":"N","Ξ":"3","Ο":"O","Π":"P","Ρ":"R","Σ":"S","Τ":"T","Υ":"Y","Φ":"F","Χ":"X","Ψ":"PS","Ω":"W","Ϊ":"I","Ϋ":"Y","ά":"a","έ":"e","ή":"h","ί":"i","ΰ":"y","α":"a","β":"b","γ":"g","δ":"d","ε":"e","ζ":"z","η":"h","θ":"8","ι":"i","κ":"k","λ":"l","μ":"m","ν":"n","ξ":"3","ο":"o","π":"p","ρ":"r","ς":"s","σ":"s","τ":"t","υ":"y","φ":"f","χ":"x","ψ":"ps","ω":"w","ϊ":"i","ϋ":"y","ό":"o","ύ":"y","ώ":"w","Ё":"Yo","Ђ":"DJ","Є":"Ye","І":"I","Ї":"Yi","Ј":"J","Љ":"LJ","Њ":"NJ","Ћ":"C","Џ":"DZ","А":"A","Б":"B","В":"V","Г":"G","Д":"D","Е":"E","Ж":"Zh","З":"Z","И":"I","Й":"J","К":"K","Л":"L","М":"M","Н":"N","О":"O","П":"P","Р":"R","С":"S","Т":"T","У":"U","Ф":"F","Х":"H","Ц":"C","Ч":"Ch","Ш":"Sh","Щ":"Sh","Ъ":"U","Ы":"Y","Ь":"","Э":"E","Ю":"Yu","Я":"Ya","а":"a","б":"b","в":"v","г":"g","д":"d","е":"e","ж":"zh","з":"z","и":"i","й":"j","к":"k","л":"l","м":"m","н":"n","о":"o","п":"p","р":"r","с":"s","т":"t","у":"u","ф":"f","х":"h","ц":"c","ч":"ch","ш":"sh","щ":"sh","ъ":"u","ы":"y","ь":"","э":"e","ю":"yu","я":"ya","ё":"yo","ђ":"dj","є":"ye","і":"i","ї":"yi","ј":"j","љ":"lj","њ":"nj","ћ":"c","џ":"dz","Ґ":"G","ґ":"g","฿":"baht","ა":"a","ბ":"b","გ":"g","დ":"d","ე":"e","ვ":"v","ზ":"z","თ":"t","ი":"i","კ":"k","ლ":"l","მ":"m","ნ":"n","ო":"o","პ":"p","ჟ":"zh","რ":"r","ს":"s","ტ":"t","უ":"u","ფ":"f","ქ":"k","ღ":"gh","ყ":"q","შ":"sh","ჩ":"ch","ც":"ts","ძ":"dz","წ":"ts","ჭ":"ch","ხ":"kh","ჯ":"j","ჰ":"h","ẞ":"SS","Ạ":"A","ạ":"a","Ả":"A","ả":"a","Ấ":"A","ấ":"a","Ầ":"A","ầ":"a","Ẩ":"A","ẩ":"a","Ẫ":"A","ẫ":"a","Ậ":"A","ậ":"a","Ắ":"A","ắ":"a","Ằ":"A","ằ":"a","Ẳ":"A","ẳ":"a","Ẵ":"A","ẵ":"a","Ặ":"A","ặ":"a","Ẹ":"E","ẹ":"e","Ẻ":"E","ẻ":"e","Ẽ":"E","ẽ":"e","Ế":"E","ế":"e","Ề":"E","ề":"e","Ể":"E","ể":"e","Ễ":"E","ễ":"e","Ệ":"E","ệ":"e","Ỉ":"I","ỉ":"i","Ị":"I","ị":"i","Ọ":"O","ọ":"o","Ỏ":"O","ỏ":"o","Ố":"O","ố":"o","Ồ":"O","ồ":"o","Ổ":"O","ổ":"o","Ỗ":"O","ỗ":"o","Ộ":"O","ộ":"o","Ớ":"O","ớ":"o","Ờ":"O","ờ":"o","Ở":"O","ở":"o","Ỡ":"O","ỡ":"o","Ợ":"O","ợ":"o","Ụ":"U","ụ":"u","Ủ":"U","ủ":"u","Ứ":"U","ứ":"u","Ừ":"U","ừ":"u","Ử":"U","ử":"u","Ữ":"U","ữ":"u","Ự":"U","ự":"u","Ỳ":"Y","ỳ":"y","Ỵ":"Y","ỵ":"y","Ỷ":"Y","ỷ":"y","Ỹ":"Y","ỹ":"y","‘":"\'","’":"\'","“":"\\"","”":"\\"","†":"+","•":"*","…":"...","₠":"ecu","₢":"cruzeiro","₣":"french franc","₤":"lira","₥":"mill","₦":"naira","₧":"peseta","₨":"rupee","₩":"won","₪":"new shequel","₫":"dong","€":"euro","₭":"kip","₮":"tugrik","₯":"drachma","₰":"penny","₱":"peso","₲":"guarani","₳":"austral","₴":"hryvnia","₵":"cedi","₹":"indian rupee","₽":"russian ruble","₿":"bitcoin","℠":"sm","™":"tm","∂":"d","∆":"delta","∑":"sum","∞":"infinity","♥":"love","元":"yuan","円":"yen","﷼":"rial"}');function t(t,n){if("string"!=typeof t)throw new Error("slugify: string argument expected");n="string"==typeof n?{replacement:n}:n||{};var a=t.split("").reduce(function(t,a){return t+(e[a]||a).replace(n.remove||/[^\w\s$*_+~.()'"!\-:@]/g,"")},"").trim().replace(/[-\s]+/g,n.replacement||"-");return n.lower?a.toLowerCase():a}return t.extend=function(t){for(var n in t)e[n]=t[n]},t})},function(e,t,n){e.exports=n(2)},function(e,t,n){"use strict";n.r(t);var a=n(0),l=n.n(a);function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var c=window.lazyblocksData,i=window.jQuery;function s(){return"xxxyxx4xxx".replace(/[xy]/g,function(e){var t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})}var d=i.fn.val;function r(e,t){return e.replace(new RegExp("#{(.+?)}","g"),function(e,n){return t[n]?t[n]:new RegExp("(.+?):selected?(.+?)","g").test(n)?t[n.split(":")[0]]===n.split("?").pop()?' selected="selected"':"":new RegExp("(.+?):checked?(.+?)","g").test(n)&&t[n.split(":")[0]]===n.split("?").pop()?' checked="checked"':""})}i.fn.val=function(){var e=d.apply(this,arguments);return arguments.length>0&&i(this).trigger("lazyblocks-change"),e},i(".lzb-dashicons-picker > input").on("input lazyblocks-change",function(){var e=i(this).val(),t=i(this).parent().find(".lzb-dashicons-picker-preview");e&&t.length&&(-1!==e.indexOf("dashicons")&&(e="dashicons "+e),t.attr("class","lzb-dashicons-picker-preview "+e))}).trigger("lazyblocks-change"),i(document).on("click",".lzb-dashicons-picker .dashicons-picker",function(e){var t=i(".dashicon-picker-container"),n=i(e.target).closest(".lzb-dashicons-picker");t.css({top:n.offset().top+n.outerHeight(),left:n.offset().left+n.outerWidth()-t.outerWidth()})}),i("button.dashicons-picker").on("click",function(e){e.preventDefault()}),void 0!==i.fn.selectize&&(i("#lazyblocks_category").selectize({create:!0}),i("#lazyblocks_keywords").selectize({plugins:["drag_drop","remove_button"],delimiter:",",maxItems:3,selectOnTab:!0,create:function(e){return{value:e,text:e}}}),i("#lazyblocks_supports_align").selectize({plugins:["drag_drop","remove_button"],delimiter:",",selectOnTab:!0,create:function(e){return{value:e,text:e}}}),i("#lazyblocks_condition_post_types").selectize({plugins:["drag_drop","remove_button"],delimiter:",",selectOnTab:!0,create:function(e){return{value:e,text:e}}}),i("#lazyblocks_keywords-selectized").on("keypress",function(e){13===e.keyCode&&e.preventDefault()})),i(document).on("click",".lzb-metabox-tabs .lzb-metabox-tabs-btn",function(e){e.preventDefault();var t=i(this),n=t.closest(".lzb-metabox-tabs");t.addClass("lzb-metabox-tabs-btn-active").siblings().removeClass("lzb-metabox-tabs-btn-active"),n.find(".lzb-metabox-tabs-content-item").removeClass("lzb-metabox-tabs-content-item-active").eq(t.index()).addClass("lzb-metabox-tabs-content-item-active")}),i(function(){if(wp.codeEditor){var e=i("#lazyblocks_code_editor_html"),t=i("#lazyblocks_code_editor_css"),n=i("#lazyblocks_code_frontend_html"),a=i("#lazyblocks_code_frontend_css"),l=Object.assign({},wp.codeEditor.defaultSettings),o=Object.assign({},wp.codeEditor.defaultSettings);l.codemirror.mode="htmlmixed",o.codemirror.mode="css",e.length&&wp.codeEditor.initialize(e[0],l),t.length&&wp.codeEditor.initialize(t[0],o),n.length&&wp.codeEditor.initialize(n[0],l),a.length&&wp.codeEditor.initialize(a[0],o)}});var p=i("#lazyblocks_controls .lzb-metabox"),b="lazyblocks_controls[#{ID}]",u='\n        <div class="lzb-metabox-control" data-control-id="#{ID}" data-control-name="'.concat(b,'" data-control-type="#{type}">\n            <div class="lzb-metabox">\n                <input class="lzb-input" id="').concat(b,'[sort]" name="').concat(b,'[sort]" type="hidden" value="#{sort}">\n                <input class="lzb-input" id="').concat(b,'[child_of]" name="').concat(b,'[child_of]" type="hidden" value="#{child_of}">\n\n                <div class="lzb-metabox-control-handle"><span class="dashicons dashicons-menu"></span></div>\n\n                <div class="lzb-metabox-label">\n                    <label data-contain-val="[id=\'').concat(b,'[label]\']" class="lzb-metabox-control-action-expand"></label>\n                    <small data-contain-val="[id=\'').concat(b,'[name]\']"></small>\n                </div>\n                <div>\n                    <div class="lzb-metabox-control-info">\n                        <div>\n                            <small data-contain-val="[id=\'').concat(b,'[type]\']"></small>\n                        </div>\n                        <div class="lzb-metabox-control-hide-from-repeater">\n                            <small data-contain-val="[id=\'').concat(b,'[placement]\']"></small>\n                        </div>\n                        <div class="lzb-metabox-control-hide-from-repeater">\n                            <small data-cond="[id=\'').concat(b,'[save_in_meta]" data-contain-val="[id=\'').concat(b,"[save_in_meta_name]']\"></small>\n                            <small data-cond=\"[id='").concat(b,'[save_in_meta] != 1">-</small>\n                        </div>\n                    </div>\n                    <div class="lzb-metabox lzb-metabox-container" data-cond="[id=\'').concat(b,'[type]\'] == repeater"></div>\n                    <div class="lzb-metabox lzb-metabox-container-add" data-cond="[id=\'').concat(b,'[type]\'] == repeater">\n                        <div class="lzb-metabox-add-control">\n                            <button class="button button-secondary">+ Add Control</button>\n                        </div>\n                    </div>\n                    <div class="lzb-metabox-control-actions">\n                        <a href="#" class="lzb-metabox-control-action-expand lzb-metabox-control-action-expand-change-text">Expand</a>\n                        <a href="#" class="lzb-metabox-control-action-remove">Delete</a>\n                    </div>\n                </div>\n            </div>\n\n            <div class="lzb-metabox-control-expanded">\n                \x3c!-- Label --\x3e\n                <div class="lzb-metabox">\n                    <div class="lzb-metabox-label">\n                        <label for="').concat(b,'[label]">Label</label>\n                        <small>This is the name which will appear on the block edit control</small>\n                    </div>\n                    <div>\n                        <input class="lzb-input" id="').concat(b,'[label]" name="').concat(b,'[label]" type="text" value="#{label}">\n                    </div>\n                </div>\n\n                \x3c!-- Name --\x3e\n                <div class="lzb-metabox">\n                    <div class="lzb-metabox-label">\n                        <label for="').concat(b,'[name]">Name</label>\n                        <small>Unique control name, no spaces. Underscores and dashes allowed</small>\n                    </div>\n                    <div>\n                        <input class="lzb-input" id="').concat(b,'[name]" name="').concat(b,'[name]" type="text" value="#{name}">\n                    </div>\n                </div>\n\n                \x3c!-- Type --\x3e\n                <div class="lzb-metabox">\n                    <div class="lzb-metabox-label">\n                        <label for="').concat(b,'[type]">Type</label>\n                    </div>\n                    <div>\n                        <select class="lzb-select" name="').concat(b,'[type]" id="').concat(b,'[type]">\n                            <optgroup label="Basic">\n                                <option value="text" #{type:selected?text}>Text</option>\n                                <option value="textarea" #{type:selected?textarea}>Text Area</option>\n                                <option value="number" #{type:selected?number}>Number</option>\n                                <option value="range" #{type:selected?range}>Range</option>\n                                <option value="url" #{type:selected?url}>URL</option>\n                                <option value="email" #{type:selected?email}>Email</option>\n                                <option value="password" #{type:selected?password}>Password</option>\n                            </optgroup>\n                            <optgroup label="Content">\n                                <option value="image" #{type:selected?image}>Image</option>\n                                <option value="gallery" #{type:selected?gallery}>Gallery</option>\n                                <option value="rich_text" #{type:selected?rich_text}>Rich Text (WYSIWYG)</option>\n                                <option value="code_editor" #{type:selected?code_editor}>Code Editor</option>\n                                <option value="inner_blocks" class="lzb-metabox-control-hide-from-repeater" #{type:selected?inner_blocks}>Inner Blocks</option>\n                            </optgroup>\n                            <optgroup label="Choice">\n                                <option value="select" #{type:selected?select}>Select</option>\n                                <option value="checkbox" #{type:selected?checkbox}>Checkbox</option>\n                                <option value="toggle" #{type:selected?toggle}>Toggle</option>\n                            </optgroup>\n                            <optgroup label="Advanced">\n                                <option value="color" #{type:selected?color}>Color Picker</option>\n                                <option value="date_time" #{type:selected?date_time}>Date Time Picker</option>\n                            </optgroup>\n                            <optgroup label="Layout" class="lzb-metabox-control-hide-from-repeater">\n                                <option value="repeater" #{type:selected?repeater}>Repeater</option>\n                            </optgroup>\n                        </select>\n                    </div>\n                </div>\n\n                \x3c!-- Choices & Allow Null for Select control --\x3e\n                <div class="lzb-metabox" data-cond="[id=\'').concat(b,'[type]\'] == select">\n                    <div class="lzb-metabox-label">\n                        <label for="').concat(b,'[choices]">Choices</label>\n                        <small>Enter each choice on a new line.</small>\n                        <small>For more control, you may specify both a value and label like this:</small>\n                        <small>value : Label</small>\n                    </div>\n                    <div>\n                        <div class="lzb-choices-hidden-array" data-name="').concat(b,'[choices]"></div>\n                        <textarea class="lzb-textarea" id="').concat(b,'[choices]" rows="6">#{choices}</textarea>\n                    </div>\n                </div>\n                <div class="lzb-metabox" data-cond="[id=\'').concat(b,'[type]\'] == select">\n                    <div class="lzb-metabox-label">\n                        <label for="').concat(b,'[allow_null]">Allow Null</label>\n                        <small>Will be added option that allow you to reset selected option value to null</small>\n                    </div>\n                    <div>\n                        <label>\n                            <input type="hidden" name="').concat(b,'[allow_null]" id="').concat(b,'[allow_null]_hidden" value="false">\n                            <input class="lzb-input" type="checkbox" name="').concat(b,'[allow_null]" id="').concat(b,'[allow_null]" value="true" #{allow_null:checked?true}>\n                            Yes\n                        </label>\n                    </div>\n                </div>\n\n                \x3c!-- Min, Max, Step for Number and Range controls --\x3e\n                <div class="lzb-metabox" data-cond="[id=\'').concat(b,"[type]'] == number || [id='").concat(b,'[type]\'] == range">\n                    <div class="lzb-metabox-label">\n                        <label for="').concat(b,'[min]">Min, Max, Step</label>\n                    </div>\n                    <div class="lzb-metabox-input-group">\n                        <input class="lzb-input" id="').concat(b,'[min]" name="').concat(b,'[min]" type="number" value="#{min}" placeholder="Min" step="#{step}">\n                        <input class="lzb-input" id="').concat(b,'[max]" name="').concat(b,'[max]" type="number" value="#{max}" placeholder="Max" step="#{step}">\n                        <input class="lzb-input" id="').concat(b,'[step]" name="').concat(b,'[step]" type="text" value="#{step}" placeholder="Step">\n                    </div>\n                </div>\n\n                \x3c!-- Picker type for Date Time Picker control --\x3e\n                <div class="lzb-metabox" data-cond="[id=\'').concat(b,'[type]\'] == date_time">\n                    <div class="lzb-metabox-label">\n                        <label for="').concat(b,'[date_time_picker]">Picker</label>\n                    </div>\n                    <div>\n                        <select class="lzb-select" name="').concat(b,'[date_time_picker]" id="').concat(b,'[date_time_picker]">\n                            <option value="date_time" #{type:selected?date_time}>Date + Time</option>\n                            <option value="date" #{type:selected?date}>Date</option>\n                            <option value="time" #{type:selected?time}>Time</option>\n                        </select>\n                    </div>\n                </div>\n\n                \x3c!-- Multiline for Rich Text control --\x3e\n                <div class="lzb-metabox" data-cond="[id=\'').concat(b,'[type]\'] == rich_text">\n                    <div class="lzb-metabox-label"></div>\n                    <div>\n                        <label>\n                            <input type="hidden" name="').concat(b,'[multiline]" id="').concat(b,'[multiline]_hidden" value="false">\n                            <input class="lzb-input" type="checkbox" name="').concat(b,'[multiline]" id="').concat(b,'[multiline]" value="true" #{multiline:checked?true}>\n                            Multiline\n                        </label>\n                    </div>\n                </div>\n\n                \x3c!-- Default value --\x3e\n                <div class="lzb-metabox" data-cond="[id=\'').concat(b,"[type]'] != image && [id='").concat(b,"[type]'] != gallery && [id='").concat(b,"[type]'] != code_editor && [id='").concat(b,"[type]'] != inner_blocks && [id='").concat(b,"[type]'] != checkbox && [id='").concat(b,"[type]'] != toggle && [id='").concat(b,'[type]\'] != repeater">\n                    <div class="lzb-metabox-label">\n                        <label for="').concat(b,'[default]">Default value</label>\n                        <small>Appears when inserting a new block</small>\n                    </div>\n                    <div>\n                        <input class="lzb-input" id="').concat(b,'[default]" name="').concat(b,'[default]" type="text" value="#{default}">\n                    </div>\n                </div>\n\n                \x3c!-- Checked for Checkbox and Toggle controls --\x3e\n                <div class="lzb-metabox" data-cond="[id=\'').concat(b,"[type]'] == checkbox || [id='").concat(b,'[type]\'] == toggle">\n                    <div class="lzb-metabox-label">\n                        <label for="').concat(b,'[checked]">Checked</label>\n                    </div>\n                    <div>\n                        <label>\n                            <input type="hidden" name="').concat(b,'[checked]" id="').concat(b,'[checked]_hidden" value="false">\n                            <input class="lzb-input" type="checkbox" name="').concat(b,'[checked]" id="').concat(b,'[checked]" value="true" #{checked:checked?true}>\n                            Yes\n                        </label>\n                    </div>\n                </div>\n\n                \x3c!-- Placeholder for text controls --\x3e\n                <div class="lzb-metabox" data-cond="[id=\'').concat(b,"[type]'] == text || [id='").concat(b,"[type]'] == textarea || [id='").concat(b,"[type]'] == number || [id='").concat(b,"[type]'] == email || [id='").concat(b,'[type]\'] == password">\n                    <div class="lzb-metabox-label">\n                        <label for="').concat(b,'[placeholder]">Placeholder</label>\n                    </div>\n                    <div>\n                        <input class="lzb-input" id="').concat(b,'[placeholder]" name="').concat(b,'[placeholder]" type="text" value="#{placeholder}">\n                    </div>\n                </div>\n\n                \x3c!-- Help text --\x3e\n                <div class="lzb-metabox" data-cond="[id=\'').concat(b,"[type]'] != inner_blocks && [id='").concat(b,'[type]\'] != repeater">\n                    <div class="lzb-metabox-label">\n                        <label for="').concat(b,'[help]">Help text</label>\n                        <small>Instructions under control</small>\n                    </div>\n                    <div>\n                        <textarea class="lzb-textarea" id="').concat(b,'[help]" name="').concat(b,'[help]" rows="6">#{help}</textarea>\n                    </div>\n                </div>\n\n                \x3c!-- Placement --\x3e\n                <div class="lzb-metabox lzb-metabox-control-hide-from-repeater">\n                    <div class="lzb-metabox-label">\n                        <label for="').concat(b,'[placement]">Placement</label>\n                    </div>\n                    <div>\n                        <select class="lzb-select" name="').concat(b,'[placement]" id="').concat(b,'[placement]">\n                            <option value="content" #{placement:selected?content}>Content</option>\n                            <option value="inspector" #{placement:selected?inspector}>Inspector</option>\n                            <option value="both" #{placement:selected?both}>Both</option>\n                            <option value="nowhere" #{placement:selected?nowhere}>Hidden</option>\n                        </select>\n                    </div>\n                </div>\n\n                \x3c!-- Meta --\x3e\n                <div class="lzb-metabox lzb-metabox-control-hide-from-repeater">\n                    <div class="lzb-metabox-label">\n                        <label for="').concat(b,'[save_in_meta]">Save in Meta</label>\n                    </div>\n                    <div>\n                        <label>\n                            <input type="hidden" name="').concat(b,'[save_in_meta]" id="').concat(b,'[save_in_meta]_hidden" value="false">\n                            <input class="lzb-input" type="checkbox" name="').concat(b,'[save_in_meta]" id="').concat(b,'[save_in_meta]" value="true" #{save_in_meta:checked?true}>\n                            Yes\n                        </label>\n                        <div data-cond="[id=\'').concat(b,'[save_in_meta]\']">\n                            <br />\n                            <input class="lzb-input" id="').concat(b,'[save_in_meta_name]" name="').concat(b,'[save_in_meta_name]" type="text" value="#{save_in_meta_name}" placeholder="Unique metabox name">\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    ');function m(){window.Sortable&&p.find(".lzb-metabox-controls, .lzb-metabox-container").each(function(){new window.Sortable(this,{group:{name:"lzb-controls",put:function(e,t,n){return"inner_blocks"!==i(n).attr("data-control-type")}},draggable:".lzb-metabox-control",filter:".lzb-input, .lzb-textarea, .lzb-select",handle:".lzb-metabox-control-handle",preventOnFilter:!1,animation:150,onSort:function(){var e=1;p.find(".lzb-metabox-controls [data-control-name]").each(function(){var t=i(this),n=t.attr("data-control-name");t.find('[name="'.concat(n,'[sort]"]')).val(e++);var a=t.closest("[data-control-id]").parents("[data-control-id]:eq(0)"),l=a.length?a.attr("data-control-id"):"";t.find('[name="'.concat(n,'[child_of]"]')).val(l)}),v()}})})}function v(){var e=p.find(".lzb-select").filter(function(){return/^lazyblocks_controls(.*)\[type\]$/.test(i(this).attr("name"))}),t=e.filter(function(){return"inner_blocks"===i(this).val()}).length;e.each(function(){var e=i(this);"inner_blocks"===e.val()||(t?e.find('option[value="inner_blocks"]').attr("disabled","disabled"):e.find('option[value="inner_blocks"]').removeAttr("disabled"))})}function f(e){var t=e.ID,n=e.choices,a=e.child_of;if(t&&"uniq"===t){for(e.ID=s();i('[data-control-id="control_'.concat(t,'"]')).length;)e.ID=s();e.ID="control_".concat(e.ID)}if(e.ID){var l,o=u;if(n&&Array.isArray(n)){var c="";n.forEach(function(e){c+=c?"\n":"",e.value===e.label?c+="".concat(e.value):c+="".concat(e.value," : ").concat(e.label)}),e.choices=c}o=r(o,e),a&&(l=p.find('[data-control-id="'.concat(a,'"] .lzb-metabox-container:eq(0)'))),l||(l=p.find(".lzb-metabox-controls")),l.append(o),p.find('[data-control-id="'.concat(e.ID,'"] .lzb-metabox-control-action-expand:eq(0)')).click(),p.find('[data-control-id="'.concat(e.ID,'"]')).find("input, select, textarea").change()}}function h(){p.find("[data-contain-val]").each(function(){var e,t=i(this),n=i(t.attr("data-contain-val"));n.is('[type="radio"], [type="checkbox"]')?e=n.is(":checked")?"true":"false":n.is("textarea, select, input")&&(e=n.val()),t.html(e)})}function y(){p.find(".lzb-choices-hidden-array").each(function(){var e=i(this),t=e.next("textarea").val(),n=e.attr("data-name"),a="",l=0;t.split("\n").forEach(function(e){var t=e.split(" : "),o=t[0].replace(/\n/g,""),c=(t[1]||t[0]).replace(/\n/g,"");o&&(a+='<input type="hidden" name="'.concat(n,"[").concat(l,'][value]" value="').concat(o,'">'),a+='<input type="hidden" name="'.concat(n,"[").concat(l,'][label]" value="').concat(c,'">'),l++)}),e.html(a)})}if(p.length){i.fn.conditionize&&p.conditionize();p.html('\n        <div class="lzb-metabox-controls"></div>\n        <div class="lzb-metabox-add-control">\n            <button class="button button-primary button-large">+ Add Control</button>\n        </div>\n    '),Object.keys(c.controls).map(function(e){c.controls[e].child_of||f(Object.assign({ID:e},c.controls[e]))}),Object.keys(c.controls).map(function(e){c.controls[e].child_of&&f(Object.assign({ID:e},c.controls[e]))}),h(),y(),p.on("change","input, select, textarea",function(){h(),y(),v()}),p.on("click",".lzb-metabox-add-control button",function(e){e.preventDefault(),f({ID:"uniq",child_of:i(this).closest("[data-control-id]").attr("data-control-id")||""}),v(),m()}),v(),m(),p.on("click",".lzb-metabox-control-action-remove",function(e){e.preventDefault(),function(e){p.find('[data-control-id="'.concat(e,'"]')).remove()}(i(this).closest("[data-control-id]").attr("data-control-id")),v(),m()}),p.on("click",".lzb-metabox-control-action-expand",function(e){e.preventDefault();var t=i(this).closest("[data-control-id]"),n=t.attr("data-control-id"),a=t.data("expanded");function l(){return i(this).closest("[data-control-id]").attr("data-control-id")===n}a?(t.find(".lzb-metabox-control-expanded").filter(l).stop().slideUp(200),t.find(".lzb-metabox-control-collapsed").filter(l).stop().slideDown(200),t.find(".lzb-metabox-control-action-expand-change-text").filter(l).text("Expand")):(t.find(".lzb-metabox-control-expanded").filter(l).stop().slideDown(200),t.find(".lzb-metabox-control-collapsed").filter(l).stop().slideUp(200),t.find(".lzb-metabox-control-action-expand-change-text").filter(l).text("Collapse")),t.data("expanded",!a)}),p.on("blur",".lzb-metabox input",function(e){e.preventDefault();var t=i(this),n=t.attr("name"),a=!1;/\[label]$/.test(n)&&((a=i('[name="'.concat(n.replace(/\[label]$/,"[name]"),'"]'))).val()?a=!1:a.val(t.val()).change()),/\[name]$/.test(n)&&(a=t),a&&a.length&&a.val(l()(a.val(),{replacement:"_",lower:!0})).change()})}var x=i('[name="post_title"]'),z=i("#lazyblocks_slug");i(document).on("click","#publish",function(e){var t=z.val();!z.val()&&x.val()&&(t=l()(x.val(),{replacement:"-",lower:!0,remove:/^[0-9-*+~.\$(_)#&\|'"!:;@/\\]/g}),z.val(t).change()),/^[a-z][a-z0-9-]*\/[a-z][a-z0-9-]*$/.test("lazyblock/".concat(t))||(e.preventDefault(),z.parent().next(".notice").length||z.parent().after('<div class="notice error"><p>'.concat("Block slug must include only lowercase alphanumeric characters or dashes, and start with a letter. Example: lazyblock/my-custom-block","</p></div>")))}),jQuery(function(){wp.api.loadPromise.done(function(){wp.api.models.Lazyblocks_templates&&function(){if(wp.api&&wp.blocks&&i("body.post-type-lazyblocks_templates").length){wp.blockLibrary&&wp.blockLibrary.registerCoreBlocks&&wp.blockLibrary.registerCoreBlocks();var e=i(".lzb-templates-buttons"),t=i(".lzb-templates-list"),n=wp.blocks.getBlockTypes(),a=wp.blocks.getCategories(),l={},c={},s={},d="";c.lazyblocks=[],a.forEach(function(e){s[e.slug]=e.title,c[e.slug]=[]}),n.forEach(function(e){if((!e.parent||!e.parent.length)&&("lazyblock-core/free"===e.name||!e.supports||void 0===e.supports.inserter||e.supports.inserter)){c[e.category]||(c[e.category]=[]);var t=e.icon.src?e.icon.src:e.icon;"function"==typeof t?t=wp.element.renderToString(t()):"object"===o(t)?t=wp.element.renderToString(t):"string"==typeof t&&(t=wp.element.createElement(wp.components.Dashicon,{icon:t}),t=wp.element.renderToString(t)),l[e.name]={name:e.name,title:e.title,icon:t,useOnce:!e.supports||void 0===e.supports.multiple||e.supports.multiple},c[e.category][e.name]=l[e.name]}}),Object.keys(c).forEach(function(e){d+='<optgroup label="'.concat(s[e]||e,'">'),Object.keys(c[e]).forEach(function(t){var n=c[e][t];d+='<option value="'.concat(n.name,'">').concat(n.title,"</option>")}),d+="</optgroup>"});var p='\n        <div class="lzb-templates-single" data-template-id="#{ID}" data-template-post-type="#{post_type}" data-template-post-label="#{post_label}">\n            <div class="lzb-metabox">\n                <div class="lzb-metabox-label">\n                    <label>#{post_label}</label>\n                </div>\n            </div>\n            <div class="lzb-metabox">\n                <div class="lzb-metabox-label">\n                    <label>Template Lock</label>\n                </div>\n                <div>\n                    <select class="lzb-select" name="template_lock">\n                        <option value="">None</option>\n                        <option value="all" #{template_lock:selected?all}>Prevent all operations</option>\n                        <option value="insert" #{template_lock:selected?insert}>Prevent inserting new blocks, but allows moving existing ones</option>\n                    </select>\n                </div>\n            </div>\n            <div class="lzb-metabox">\n                <div class="lzb-metabox-label">\n                    <label>Blocks</label>\n                </div>\n                <div>\n                    <ul class="lzb-templates-single-blocks">#{blocks}</ul>\n                    <select class="lzb-select lzb-templates-single-add-blocks" placeholder="+ Add block">\n                        #{blocks_list}\n                    </select>\n                </div>\n            </div>\n            <ul class="lzb-templates-single-actions">\n                <a href="#" class="lzb-templates-single-actions-remove">Remove</a>\n                <button class="button button-primary lzb-templates-single-actions-save">Save Template</button>\n            </ul>\n        </div>\n    ',b='\n        <div class="lzb-templates-single-blocks-block #{class}" data-block-name="#{name}">\n            <span class="lzb-templates-single-blocks-block-icon">#{icon}</span>\n            <span>#{title} <small>[#{name}]</small></span>\n            <button class="lzb-templates-single-blocks-block-remove"><span class="dashicons dashicons-no-alt"></span></button>\n        </div>\n    ';new wp.api.collections.Lazyblocks_templates({data:{per_page:999}}).fetch().done(function(e){t.html(""),e.forEach(function(e){var t;try{t=JSON.parse(decodeURI(e.meta.lzb_template_data))}catch(e){t={}}var n="";t.blocks.forEach(function(e){var t=e;t.title="Undefined Block",l[e.name]?t=l[e.name]:(t.icon='<svg aria-hidden="true" role="img" focusable="false" class="dashicon dashicons-warning" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20"><path d="M10 2c4.42 0 8 3.58 8 8s-3.58 8-8 8-8-3.58-8-8 3.58-8 8-8zm1.13 9.38l.35-6.46H8.52l.35 6.46h2.26zm-.09 3.36c.24-.23.37-.55.37-.96 0-.42-.12-.74-.36-.97s-.59-.35-1.06-.35-.82.12-1.07.35-.37.55-.37.97c0 .41.13.73.38.96.26.23.61.34 1.06.34s.8-.11 1.05-.34z"></path></svg>',t.class="lzb-templates-single-blocks-undefined"),n+=r(b,t)}),u({ID:e.id,post_type:t.post_type||"post",post_label:t.post_label||t.post_type||"post",blocks:n,template_lock:t.template_lock||"",blocks_list:d}),m()})}),e.on("click","button",function(e){e.preventDefault();var t=i(this);t.attr("disabled","disabled"),new wp.api.models.Lazyblocks_templates({title:i(this).attr("data-post-label"),status:"publish",meta:{lzb_template_data:encodeURI(JSON.stringify({post_type:t.attr("data-post-type"),post_label:t.attr("data-post-label"),template_lock:"",blocks:[]}))}}).save().done(function(e){e&&e.id?(u({ID:e.id,post_type:t.attr("data-post-type"),post_label:t.attr("data-post-label"),blocks:"",template_lock:"",blocks_list:d},"prepend"),m()):t.removeAttr("disabled")})}),t.on("click",".lzb-templates-single-actions-save",function(e){e.preventDefault();var t=i(this),n=i(this).closest("[data-template-id]"),a=[];n.find(".lzb-templates-single-blocks .lzb-templates-single-blocks-block").each(function(){a.push({name:i(this).attr("data-block-name")})});var l=new wp.api.models.Lazyblocks_templates({id:n.attr("data-template-id"),meta:{lzb_template_data:encodeURI(JSON.stringify({post_type:n.attr("data-template-post-type"),post_label:n.attr("data-template-post-label"),template_lock:n.find('[name="template_lock"]').val()||"",blocks:a}))}});t.attr("disabled","disabled"),l.save().done(function(){setTimeout(function(){t.removeAttr("disabled")},500)})}),t.on("click",".lzb-templates-single-actions-remove",function(t){t.preventDefault();var n=i(this).closest("[data-template-id]"),a=new wp.api.models.Lazyblocks_templates({id:n.attr("data-template-id")});n.hide(),a.destroy({force:!0}).done(function(t){t&&t.deleted?(e.find('[data-post-type="'+n.attr("data-template-post-type")+'"]').removeAttr("disabled"),n.remove()):(console.log(t),n.show())})}),t.on("change",".lzb-templates-single-add-blocks",function(e){e.preventDefault();var t=i(this),n=t.val(),a=t.closest("[data-template-id]");l[n]&&a.find(".lzb-templates-single-blocks").append(r(b,l[n])),t.val("")}),t.on("click",".lzb-templates-single-blocks-block-remove",function(e){e.preventDefault(),i(this).closest(".lzb-templates-single-blocks-block").remove()})}function u(n){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"append";t[a](r(p,n)),e.find('[data-post-type="'+n.post_type+'"]').attr("disabled","disabled")}function m(){void 0!==i.fn.selectize&&i(".lzb-select:not(.lzb-select-ready)").each(function(){var e=i(this).addClass("lzb-select-ready"),t=e.attr("placeholder"),n=e.hasClass("lzb-templates-single-add-blocks");e.selectize({allowEmptyOption:!t,placeholder:t,searchField:["text","optgroup"],onChange:function(){n&&setTimeout(function(){e[0].selectize.clear()},20)},onInitialize:function(){t&&e[0].selectize.clear()},render:{option:function(e,t){var n="";return l[e.value]&&(n=l[e.value].icon),'<div><span class="selectize-svg-icon">'.concat(n,"</span>").concat(t(e.text),"</div>")}}})})}}()})})}]);